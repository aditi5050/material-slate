{"version":3,"file":"index.js","sources":["../src/slate/MaterialEditor.js","../src/plugins/withBase.js","../src/plugins/withMarks.js","../src/plugins/withBlocks.js","../src/slate/createMaterialEditor.js","../src/plugins/withComments.js","../src/plugins/withEndnotes.js","../src/plugins/withCounter.js","../src/plugins/withLinks.js","../src/slate-react/MaterialSlate.jsx","../node_modules/is-hotkey/lib/index.js","../src/slate-react/defaultRenderElement.js","../src/slate-react/defaultRenderLeaf.js","../src/slate-react/defaultHotkeys.js","../src/slate-react/MaterialEditable.jsx","../node_modules/@babel/runtime/helpers/interopRequireDefault.js","../node_modules/@babel/runtime/helpers/extends.js","../node_modules/@material-ui/icons/utils/createSvgIcon.js","../node_modules/@material-ui/icons/CropSquareOutlined.js","../src/components/Buttons/ToolbarButton.jsx","../node_modules/@material-ui/icons/FormatBold.js","../src/components/Buttons/BoldButton.jsx","../node_modules/@material-ui/icons/FormatItalicOutlined.js","../src/components/Buttons/ItalicButton.jsx","../node_modules/@material-ui/icons/FormatUnderlined.js","../src/components/Buttons/UnderlinedButton.jsx","../node_modules/@material-ui/icons/StrikethroughS.js","../src/components/Buttons/StrikethroughButton.jsx","../node_modules/@material-ui/icons/Code.js","../src/components/Buttons/CodeButton.jsx","../node_modules/@material-ui/icons/FormatListBulleted.js","../src/components/Buttons/BulletedListButton.jsx","../node_modules/@material-ui/icons/FormatListNumbered.js","../src/components/Buttons/NumberedListButton.jsx","../src/components/Toolbars/Toolbar.jsx","../src/components/Toolbars/HoveringToolbar.jsx","../src/components/Buttons/ButtonSeparator.jsx","../src/components/SimpleDialog.jsx","../node_modules/@material-ui/icons/AddCommentOutlined.js","../src/components/Buttons/AddCommentButton.jsx","../node_modules/@material-ui/icons/CallToActionOutlined.js","../src/components/Buttons/EndnoteButton.jsx","../node_modules/@material-ui/icons/Link.js","../src/components/Buttons/LinkButton.jsx","../src/components/Elements/CommentElement.jsx","../src/components/Elements/EndnoteElement.jsx","../src/components/Counters/WordCounter.jsx","../src/components/Counters/CharCounter.jsx"],"sourcesContent":["import { Editor } from 'slate'\n\nconst MaterialEditor = {\n    ...Editor,\n}\n\nexport default MaterialEditor","import MaterialEditor from '../slate/MaterialEditor'\nimport { Range } from 'slate'\nimport { Transforms } from 'slate'\nimport { Node } from 'slate'\nimport { ReactEditor } from 'slate-react'\n/**\n *\n * Base plugin for Material Slate.\n *\n * All other plugins assume this plugin exists and has been included.\n *\n * @param {Editor} editor\n */\nconst withBase = editor => {\n  /**\n   * Is the current editor selection a range, that is the focus and the anchor are different?\n   *\n   * @returns {boolean} true if the current selection is a range.\n   */\n  editor.isSelectionExpanded = () => {\n    return editor.selection ? Range.isExpanded(editor.selection) : false\n  }\n\n  /**\n   * Returns true if current selection is collapsed, that is there is no selection at all\n   * (the focus and the anchor are the same).\n   *\n   * @returns {boolean} true if the selection is collapsed\n   */\n  editor.isSelectionCollapsed = () => {\n    return !editor.isSelectionExpanded()\n  }\n\n  /**\n   * Is the editor focused?\n   * @returns {boolean} true if the editor has focus. */\n  editor.isFocused = () => {\n    return ReactEditor.isFocused(editor)\n  }\n\n  /**\n   * Unwraps any node of `type` within the current selection.\n   */\n  editor.unwrapNode = type => {\n    Transforms.unwrapNodes(editor, { match: n => n.type === type })\n  }\n\n  /**\n   *\n   * @param {string} type type of node to be checked. Example: `comment`, `numbered-list`\n   *\n   * @returns {bool} true if within current selection there is a node of type `type`\n   */\n  editor.isNodeTypeActive = type => {\n    const [node] = MaterialEditor.nodes(editor, { match: n => n.type === type })\n    return !!node\n  }\n\n  /**\n   * Variable for holding a selection may be forgotten.\n   */\n  editor.rememberedSelection = {}\n\n  /**\n   * Gets current selection and stores it in rememberedSelection.\n   *\n   * This may be useful when you need to open a dialog box and the editor loses the focus\n   */\n  editor.rememberCurrentSelection = () => {\n    editor.rememberedSelection = editor.selection\n  }\n\n  /**\n   * Is the current selection collapsed?\n   */\n  editor.isCollapsed = () => {\n    const { selection } = editor\n    //console.log('selection', selection)\n    return selection && Range.isCollapsed(selection)\n  }\n\n  /**\n   * Wraps a selection with an argument. If `wrapSelection` is not passed\n   * uses current selection\n   *\n   * Upon wrapping moves the cursor to the end.\n   *\n   * @param {Node} node the node to be added\n   * @param {Selection} wrapSelection selection of the text that will be wrapped with the node.\n   *\n   */\n  editor.wrapNode = (node, wrapSelection = null) => {\n    //if wrapSelection is passed => we use it. Use editor selection in other case\n    editor.selection = wrapSelection ? wrapSelection : editor.selection\n\n    // if the node is already wrapped with current node we unwrap it first.\n    if (editor.isNodeTypeActive(node.type)) {\n      editor.unwrapNode(node.type)\n    }\n    // if there is no text selected => insert the node.\n    //console.log(editor.selection)\n    //console.log('isLocation', Location.isLocation(editor.selection))\n    if (editor.isCollapsed()) {\n      //console.log('is collapsed insertNodes')\n      Transforms.insertNodes(editor, node)\n    } else {\n      //text is selected => add the node\n      Transforms.wrapNodes(editor, node, { split: true })\n      //console.log('editor', editor.children)\n      Transforms.collapse(editor, { edge: 'end' })\n    }\n  }\n\n  /**\n   * Unwraps or removes the nodes that are not in the list.\n   *\n   * It will search for all the nodes of `type` in the editor and will keep only\n   * the ones in the nodesToKeep.\n   *\n   * It assumes each item of nodesToKeep has an attribute `id`. This attribute will be the discriminator.\n   *\n   */\n  editor.syncExternalNodes = (type, nodesToKeep, unwrap = true) => {\n    //extracts the id from the nodes and removes those that are not in the list\n    const listOfIds = nodesToKeep.map(node => node.id)\n\n    if (unwrap) {\n      editor.unwrapNotInList(type, listOfIds)\n    } else {\n      editor.removeNotInList(type, listOfIds)\n    }\n    const nodesToKeepObj = {}\n    //Update values of nodes.data\n    //Create a map by id of the nodes to keep\n    nodesToKeep.forEach(node => (nodesToKeepObj[node.id] = node))\n    //Find nodes of this type remaining in the editor\n    const editorNodes = editor.findNodesByType(type)\n    //Update them\n    editorNodes.map(node => {\n      Transforms.setNodes(\n        editor,\n        { data: nodesToKeepObj[node.id] },\n        { match: n => n.id == node.id, at: [] }\n      )\n    })\n  }\n\n  /**\n   * Removes the nodes that are not in the list of Ids\n   *\n   * Nodes of type `type` shall have the attribute/property `id`\n   *\n   * Example:\n   * ```\n   * {\n   *    type: `comment`\n   *    id: 30\n   *    data: { ... }\n   *  }\n   * ```\n   */\n  editor.removeNotInList = (type, listOfIds) => {\n    Transforms.removeNodes(editor, {\n      match: n => n.type === type && !listOfIds.includes(n.id),\n      at: [], //Search the whole editor content\n    })\n  }\n\n  /**\n   *\n   * Unwraps the nodes of `type` whose ids are not in the provided list\n   *\n   * It assumes the nodes of `type` have an attribute `id`. The `id` may be a number or string.\n   *\n   * @param {string} type node type to be searched. Example: `comment`\n   * @param {Array} listOfIds Array with the list of ids. Example: [1, 2, 3].\n   */\n  editor.unwrapNotInList = (type, listOfIds) => {\n    Transforms.unwrapNodes(editor, {\n      match: n => n.type === type && !listOfIds.includes(n.id),\n      at: [], //Search the whole editor content\n    })\n  }\n\n  /**\n   * Gets from current editor content the list of items of a particular type\n   */\n  editor.findNodesByType = type => {\n    const list = MaterialEditor.nodes(editor, {\n      match: n => n.type === type,\n      at: [],\n    })\n    // List in editor with path and node\n    const listWithNodesAndPath = Array.from(list)\n    // List with node (element)\n    const listWithNodes = listWithNodesAndPath.map(item => {\n      return item[0]\n    })\n    //console.log('fondNodesByType ', listWithNodes)\n    return listWithNodes\n  }\n\n  /**\n   * Returns the serialized value (plain text)\n   */\n  editor.serialize = nodes => {\n    return nodes.map(n => Node.string(n)).join('\\n')\n  }\n\n  /**\n   * Functions similar to syncExternalNodes,and also updates the node temporaryId with original id and data\n   *\n   * First, It will search for match in temporaryId's in nodesToKeep with id's of nodes and updates it with latest data\n   * Then, updates data in node id's matching with nodesToKeep id's\n   *\n   * Unwraps or removes the nodes that are not in the list.\n   */\n  editor.syncExternalNodesWithTemporaryId = (\n    type,\n    nodesToKeep,\n    unwrap = true\n  ) => {\n    //extracts the id from the nodes and removes those that are not in the list\n    const listOfIds = nodesToKeep.map(node => node.id)\n\n    const nodesToKeepObj = {}\n    //Update values of nodes.data\n    //Create a map by id of the nodes to keep\n    nodesToKeep.forEach(node => (nodesToKeepObj[node.id] = node))\n    //Find nodes of this type remaining in the editor\n    const editorNodes = editor.findNodesByType(type)\n    //Update them\n    editorNodes.map(node => {\n      // Find the key of node to update\n      const key = Object.keys(nodesToKeepObj).find(\n        key => nodesToKeepObj[key].temporaryId === node.id\n      )\n\n      // node to Update with original Id and data\n      const nodeToUpdate = nodesToKeepObj[key]\n      // If node.id exists\n      if (nodesToKeepObj[node.id] && !nodeToUpdate) {\n        Transforms.setNodes(\n          editor,\n          { data: nodesToKeepObj[node.id] },\n          { match: n => n.id == node.id, at: [0] }\n        )\n        // TemporaryId and data will be replaced with new id and data\n      } else if (key && nodeToUpdate) {\n        Transforms.setNodes(\n          editor,\n          { id: nodeToUpdate.id, data: nodeToUpdate },\n          { match: n => n.id == nodeToUpdate.temporaryId, at: [] }\n        )\n      } else if (unwrap) {\n        // unwraps the nodes in not list\n        editor.unwrapNotInList(type, listOfIds)\n      } else {\n        // removes the nodes in not list\n        editor.removeNotInList(type, listOfIds)\n      }\n    })\n  }\n  /**\n   * Is to get the selected plain text from the editor.selection\n   *\n   * @returns {string} selected text\n   */\n  editor.getSelectedText = () => {\n    return MaterialEditor.string(editor, editor.rememberedSelection)\n  }\n\n  return editor\n}\n\nexport default withBase\n","import MaterialEditor from '../slate/MaterialEditor'\n\n/**\n * Helper functions for managing inline marks\n * \n * @param {Editor} editor \n */\nconst withMarks = editor => { \n  \n  /**\n   * Checks if the mark is active\n   * \n   * @param {String} mark Mark to validate For example: 'bold', 'italic'\n   */\n  editor.isMarkActive = mark => {\n    const marks = MaterialEditor.marks(editor)\n    return marks ? marks[mark] === true : false\n  }\n\n  /**\n   * Toggles on/off the mark. If the mark exists it is removed and vice versa.\n   *   \n   * @param {String} mark Mark to validate For example: 'bold', 'italic'\n   */ \n   editor.toggleMark = mark => { \n    editor.isMarkActive(mark) ? MaterialEditor.removeMark(editor, mark) : MaterialEditor.addMark(editor, mark, true)\n  }\n  return editor\n}\n\nexport default withMarks","import MaterialEditor from '../slate/MaterialEditor'\nimport { Transforms } from 'slate'\n\n/**\n * Simple block handling\n * \n * @param {Editor} editor \n */\nconst withBlocks = editor => {\n  editor.LIST_TYPES = ['numbered-list', 'bulleted-list']\n\n  /**\n   * checks if a block is active\n   */\n  editor.isBlockActive = (block) => {\n    const [match] = MaterialEditor.nodes(editor, {\n      match: n => n.type === block,\n    })\n    return !!match\n  }\n\n  /**\n   * Toggles the block in the current selection\n   */\n  editor.toggleBlock = (block) => {\n    const isActive = editor.isBlockActive(block)\n    const isList = editor.LIST_TYPES.includes(block)\n\n    Transforms.unwrapNodes(editor, {\n      match: n => editor.LIST_TYPES.includes(n.type),\n      split: true,\n    })\n\n    //TODO cannot this be generalized??\n    Transforms.setNodes(editor, {\n      type: isActive ? 'paragraph' : isList ? 'list-item' : block,\n    })\n\n    if (!isActive && isList) {\n      const selected = { type: block, children: [] }\n      Transforms.wrapNodes(editor, selected)\n    }\n  }\n  return editor\n}\n\nexport default withBlocks","import { createEditor } from 'slate'\n\n// slate plugins\nimport { withReact } from 'slate-react'\nimport { withHistory } from 'slate-history'\n\n// Import material editor plugins\nimport withBase from '../plugins/withBase'\nimport withMarks from '../plugins/withMarks'\nimport withBlocks from '../plugins/withBlocks'\n\n/**\n * Creates a RichText editor.\n *\n * Includes the following plugins\n *  - withBlocks\n *  - withMarks\n *  - withBase\n *  - withHistory\n *  - withReact\n *\n * @param {string} editorId Optional unique identifier in case you have more than one editor. Defaults to default.\n * @public\n */\nexport default function createMaterialEditor(editorId = 'default') {\n  const editor = withBlocks(\n    withMarks(withBase(withHistory(withReact(createEditor()))))\n  )\n  editor.editorId = editorId\n  return editor\n}\n","const withComments = editor => {\n\n  const { isInline } = editor\n\n  const COMMENT_TYPE = 'comment'\n  \n  /**\n   * Set comment type not to be an inline element\n   */\n  editor.isInline = element => {\n    return element.type === COMMENT_TYPE ? true : isInline(element)\n  }\n\n  /**\n   * If the editor loses focus upon pressing the `AddCommentButton`, you need to call \n   * editor.rememberCurrentSelection() before the editor loses the focus  \n   * \n   * `data` cannot contain the following items: id, type or children.\n   */ \n  editor.addComment = (id, data) => {\n    const node = {\n      id: id,\n      type: COMMENT_TYPE,\n      children: [], \n      data //any data of the comment will be an attribute.\n    } \n    editor.wrapNode(node, editor.selection || editor.rememberedSelection)  \n  }\n  \n  /**\n   * Synchronizes comments.\n   * \n   * It receives a list of comments. \n   *  - Comments that are in the editor but not in the list are deleted\n   *  - Contents of the comments that are in the list are updated.\n   * \n   * Each comment is identified by `id` attribute in the node.\n   * \n   * @param {Array} commentsToKeep is a list of comment objects that have an attribute `id`.\n   */\n  editor.syncComments = (commentsToKeep) => {\n    editor.syncExternalNodes(COMMENT_TYPE, commentsToKeep)\n  }\n\n  return editor\n}\nexport default withComments\n","\nimport { Editor } from 'slate'\n/**\n * Plugin for handling endnote synced type\n * \n * Requires withBase plugin\n */\nconst withEndnotes = editor => {\n  const { isInline, isVoid } = editor\n\n  const ENDNOTE_TYPE = 'endnote'\n\n  /**\n   * Overwrite to indicate `endnote` nodes are inline\n   */\n  editor.isInline = element => {\n    return element.type === ENDNOTE_TYPE ? true : isInline(element)\n  }\n\n  /**\n   * Overwrite to indicate `endnote` nodes are void\n   */\n  editor.isVoid = element => {\n    return element.type === ENDNOTE_TYPE ? true : isVoid(element)\n  }\n\n  /**\n   * If the editor loses focus upon pressing the `AddEndnoteButton`, you need to call \n   * editor.rememberCurrentSelection() before the editor loses the focus  \n   * \n   * `data` cannot contain the following items: id, type or children.\n   */ \n  editor.addEndnote = (id,data) => {\n    const text = { text: '' }\n    const node = {\n      id: id,\n      type: ENDNOTE_TYPE,\n      children: [text], \n      data //any data of the comment will be an attribute.\n    } \n    editor.wrapNode(node, editor.selection || editor.rememberedSelection)  \n    return node\n  }\n  \n  /**\n   * Gets the endnote node previous to this one.\n   * If there is no endnote, returns null\n   */\n  editor.previousEndnoteNode = (endnoteId) => {\n    let previous = null\n    const endnotes = editor.findNodesByType(ENDNOTE_TYPE)\n    for(const endnote of endnotes) {\n      if (endnote.id === endnoteId) {\n        break\n      } \n      previous = endnote\n    \n    }\n    return previous\n  }\n\n   /**\n   *  Synchronizes endnotes.\n   * \n   * It receives a list of endnotes. \n   *  - Endnotes that are in the editor but not in the list are deleted\n   *  - Endnotes of the endnotes that are in the list are updated.\n   * \n   * Each endnote is identified by `id` attribute in the node.\n   * \n   * @param {Array} endnotesToKeep is a list of endnotes objects that have an attribute `id`.\n   */\n  editor.syncEndnotes= (endnotesToKeep) => {\n    editor.syncExternalNodes(ENDNOTE_TYPE, endnotesToKeep, false)\n  }\n\n  return editor\n}\n\nexport default withEndnotes\n\n\n","import { Node } from 'slate'\n/**\n *\n * Counter plugin for Material Slate.\n *\n * @param {Editor} editor\n */\nconst withCounter = editor => {\n  /**\n   * Returns the chars length\n   */\n  editor.getCharLength = nodes => {\n    return editor.serialize(nodes).length\n  }\n\n  /**\n   * Returns the words length\n   *\n   */\n  editor.getWordsLength = nodes => {\n    const content = editor.serialize(nodes)\n    //Reg exp from https://css-tricks.com/build-word-counter-app/\n    return content && content.length\n      ? content.match(/\\b[-?(\\w+)?]+\\b/gi).length\n      : 0\n  }\n\n  /**\n   * Returns the paragraphs length\n   */\n  editor.getParagraphLength = nodes => {\n    return nodes\n      .map(n => Node.string(n))\n      .join('\\n')\n      .split(/\\r\\n|\\r|\\n/).length\n  }\n\n  return editor\n}\n\nexport default withCounter\n","const withLinks = editor => {\n  const { isInline } = editor\n  const LINK_TYPE = 'link'\n\n  /**\n   * Set link type not to be an inline element\n   */\n  editor.isInline = element => {\n    return element.type === LINK_TYPE ? true : isInline(element)\n  }\n\n  /**\n   * If the editor loses focus upon pressing the `LinkButton`, you need to call\n   * editor.rememberCurrentSelection() before the editor loses the focus\n   */\n  editor.insertLink = url => {\n    if (editor.isNodeTypeActive(LINK_TYPE)) {\n      editor.unwrapNode(LINK_TYPE)\n    }\n    // editor selection on link button click\n    const wrapSelection = editor.selection || editor.rememberedSelection\n    editor.selection = wrapSelection ? wrapSelection : editor.selection\n    const node = {\n      type: LINK_TYPE,\n      url,\n      children: editor.isCollapsed() ? [{ text: url }] : [],\n    }\n    editor.wrapNode(node, wrapSelection)\n  }\n\n  return editor\n}\n\nexport default withLinks\n","import React from 'react'\nimport { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { Slate } from 'slate-react'\nimport Box from '@material-ui/core/Box'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    borderRadius: theme.shape.borderRadius,\n    border: '1px solid',\n    borderColor: theme.palette.grey[400],\n    '&:hover': {\n      borderColor: theme.palette.text.primary,\n    },\n  },\n  focused: {\n    borderColor: theme.palette.primary.main,\n    '&:hover': {\n      borderColor: theme.palette.primary.main,\n    },\n  },\n}))\n\n/**\n * Rich Slate\n *\n * It is the provider of the useSlate hook.\n *\n *\n */\nexport default function MaterialSlate({\n  value,\n  editor,\n  onChange,\n  children,\n  className,\n  focusClassName,\n}) {\n  const classes = useStyles()\n  const [isFocused, setIsFocused] = useState(false)\n  return (\n    <Box\n      onBlur={() => setIsFocused(false)}\n      onFocus={() => setIsFocused(true)}\n      className={`${classes.root} ${isFocused &&\n        (focusClassName ? focusClassName : classes.focused)} ${className}`}\n    >\n      <Slate value={value} editor={editor} onChange={value => onChange(value)}>\n        {children}\n      </Slate>\n    </Box>\n  )\n}\n\nMaterialSlate.propTypes = {\n  /** editor created using createRichEditor() */\n  editor: PropTypes.object.isRequired,\n  /** content to display in the editor*/\n  value: PropTypes.arrayOf(PropTypes.object).isRequired,\n  /** Called every time there is a change on the value */\n  onChange: PropTypes.func,\n  /** class to override and style the slate  */\n  className: PropTypes.string,\n  /** className to apply when the editor has focus */\n  focusClassName: PropTypes.string,\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n/**\n * Constants.\n */\n\nvar IS_MAC = typeof window != 'undefined' && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);\n\nvar MODIFIERS = {\n  alt: 'altKey',\n  control: 'ctrlKey',\n  meta: 'metaKey',\n  shift: 'shiftKey'\n};\n\nvar ALIASES = {\n  add: '+',\n  break: 'pause',\n  cmd: 'meta',\n  command: 'meta',\n  ctl: 'control',\n  ctrl: 'control',\n  del: 'delete',\n  down: 'arrowdown',\n  esc: 'escape',\n  ins: 'insert',\n  left: 'arrowleft',\n  mod: IS_MAC ? 'meta' : 'control',\n  opt: 'alt',\n  option: 'alt',\n  return: 'enter',\n  right: 'arrowright',\n  space: ' ',\n  spacebar: ' ',\n  up: 'arrowup',\n  win: 'meta',\n  windows: 'meta'\n};\n\nvar CODES = {\n  backspace: 8,\n  tab: 9,\n  enter: 13,\n  shift: 16,\n  control: 17,\n  alt: 18,\n  pause: 19,\n  capslock: 20,\n  escape: 27,\n  ' ': 32,\n  pageup: 33,\n  pagedown: 34,\n  end: 35,\n  home: 36,\n  arrowleft: 37,\n  arrowup: 38,\n  arrowright: 39,\n  arrowdown: 40,\n  insert: 45,\n  delete: 46,\n  meta: 91,\n  numlock: 144,\n  scrolllock: 145,\n  ';': 186,\n  '=': 187,\n  ',': 188,\n  '-': 189,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '[': 219,\n  '\\\\': 220,\n  ']': 221,\n  '\\'': 222\n};\n\nfor (var f = 1; f < 20; f++) {\n  CODES['f' + f] = 111 + f;\n}\n\n/**\n * Is hotkey?\n */\n\nfunction isHotkey(hotkey, options, event) {\n  if (options && !('byKey' in options)) {\n    event = options;\n    options = null;\n  }\n\n  if (!Array.isArray(hotkey)) {\n    hotkey = [hotkey];\n  }\n\n  var array = hotkey.map(function (string) {\n    return parseHotkey(string, options);\n  });\n  var check = function check(e) {\n    return array.some(function (object) {\n      return compareHotkey(object, e);\n    });\n  };\n  var ret = event == null ? check : check(event);\n  return ret;\n}\n\nfunction isCodeHotkey(hotkey, event) {\n  return isHotkey(hotkey, event);\n}\n\nfunction isKeyHotkey(hotkey, event) {\n  return isHotkey(hotkey, { byKey: true }, event);\n}\n\n/**\n * Parse.\n */\n\nfunction parseHotkey(hotkey, options) {\n  var byKey = options && options.byKey;\n  var ret = {};\n\n  // Special case to handle the `+` key since we use it as a separator.\n  hotkey = hotkey.replace('++', '+add');\n  var values = hotkey.split('+');\n  var length = values.length;\n\n  // Ensure that all the modifiers are set to false unless the hotkey has them.\n\n  for (var k in MODIFIERS) {\n    ret[MODIFIERS[k]] = false;\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = values[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var value = _step.value;\n\n      var optional = value.endsWith('?') && value.length > 1;\n\n      if (optional) {\n        value = value.slice(0, -1);\n      }\n\n      var name = toKeyName(value);\n      var modifier = MODIFIERS[name];\n\n      if (length === 1 || !modifier) {\n        if (byKey) {\n          ret.key = name;\n        } else {\n          ret.which = toKeyCode(value);\n        }\n      }\n\n      if (modifier) {\n        ret[modifier] = optional ? null : true;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return ret;\n}\n\n/**\n * Compare.\n */\n\nfunction compareHotkey(object, event) {\n  for (var key in object) {\n    var expected = object[key];\n    var actual = void 0;\n\n    if (expected == null) {\n      continue;\n    }\n\n    if (key === 'key' && event.key != null) {\n      actual = event.key.toLowerCase();\n    } else if (key === 'which') {\n      actual = expected === 91 && event.which === 93 ? 91 : event.which;\n    } else {\n      actual = event[key];\n    }\n\n    if (actual == null && expected === false) {\n      continue;\n    }\n\n    if (actual !== expected) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Utils.\n */\n\nfunction toKeyCode(name) {\n  name = toKeyName(name);\n  var code = CODES[name] || name.toUpperCase().charCodeAt(0);\n  return code;\n}\n\nfunction toKeyName(name) {\n  name = name.toLowerCase();\n  name = ALIASES[name] || name;\n  return name;\n}\n\n/**\n * Export.\n */\n\nexports.default = isHotkey;\nexports.isHotkey = isHotkey;\nexports.isCodeHotkey = isCodeHotkey;\nexports.isKeyHotkey = isKeyHotkey;\nexports.parseHotkey = parseHotkey;\nexports.compareHotkey = compareHotkey;\nexports.toKeyCode = toKeyCode;\nexports.toKeyName = toKeyName;","import React from 'react'\n\nexport default function defaultRenderElement({\n  element,\n  children,\n  attributes,\n  ...rest\n}) {\n  switch (element.type) {\n    case 'block-quote':\n      return <blockquote {...attributes}>{children}</blockquote>\n    case 'bulleted-list':\n      return <ul {...attributes}>{children}</ul>\n    case 'heading-one':\n      return <h1 {...attributes}>{children}</h1>\n    case 'heading-two':\n      return <h2 {...attributes}>{children}</h2>\n    case 'list-item':\n      return <li {...attributes}>{children}</li>\n    case 'numbered-list':\n      return <ol {...attributes}>{children}</ol>\n    case 'link':\n      return (\n        <a {...attributes} href={element.url}>\n          {children}\n        </a>\n      )\n    default:\n      return <p {...attributes}>{children}</p>\n  }\n}\n","import React from 'react'\n\n/**\n * Default renderer of leafs. \n * \n * Handles the following type of leafs `bold` (strong), `code` (code), `italic` (em), `strikethrough` (del), `underlined`(u).\n * \n * @param {Object} props \n */\n\nexport default function defaultRenderLeaf({ leaf, attributes, children, text }) {\n  if (leaf.bold) {\n    children = <strong>{children}</strong>\n  }\n  if (leaf.code) {\n    children = <code>{children}</code>\n  }\n  if (leaf.italic) {\n    children = <em>{children}</em>\n  }\n  if (leaf.strikethrough) {\n    children = <del>{children}</del>\n  }\n  if (leaf.underlined) {\n    children = <u>{children}</u>\n  }\n  return <span {...attributes}>{children}</span> \n}","const defaultHotkeys = {\n  'mod+b': {\n    type: 'mark',\n    value: 'bold',\n  },\n  'mod+i': {\n    type: 'mark',\n    value: 'italic',\n  },\n  'mod+u': {\n    type: 'mark',\n    value: 'underlined',\n  },\n  'mod+`': {\n    type: 'mark',\n    value: 'code',\n  },\n  'shift+enter': {\n    type: 'newline',\n    value: '',\n  },\n}\nexport default defaultHotkeys\n","import React, { useCallback } from 'react'\nimport { Transforms } from 'slate'\nimport { Editable, useSlate } from 'slate-react'\nimport PropTypes from 'prop-types'\nimport isHotkey from 'is-hotkey'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport defaultRenderElement from './defaultRenderElement'\nimport defaultRenderLeaf from './defaultRenderLeaf'\nimport defaultHotkeys from './defaultHotkeys'\n\nconst useStyles = makeStyles(theme => ({\n  editable: {\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n    fontFamily: theme.typography.fontFamily,\n  },\n}))\n\n/**\n * Wrapper of Slate Editable\n *\n */\nexport default function MaterialEditable({\n  renderElement,\n  renderLeaf,\n  placeholder,\n  hotkeys,\n  onHotkey,\n  children,\n  className,\n  ...props\n}) {\n  const editor = useSlate()\n  const classes = useStyles()\n\n  // Define a rendering function based on the element passed to `props`.\n  // Props is deconstructed in the {element, attributes, children, rest (any other prop)\n  // We use `useCallback` here to memoize the function for subsequent renders.\n  const handleRenderElement = useCallback(props => {\n    return renderElement ? renderElement(props) : defaultRenderElement(props)\n  }, [])\n\n  const handleRenderLeaf = useCallback(props => {\n    return renderLeaf ? renderLeaf(props) : defaultRenderLeaf(props)\n  }, [])\n\n  const handleOnKeyDown = event => {\n    for (const pressedKeys in hotkeys) {\n      if (isHotkey(pressedKeys, event)) {\n        const hotkey = hotkeys[pressedKeys]\n        //console.log(hotkey)\n        event.preventDefault()\n        if (hotkey.type === 'mark') {\n          editor.toggleMark(hotkey.value)\n        }\n        if (hotkey.type === 'block') {\n          editor.toggleBlock(hotkey.value)\n        }\n        if (hotkey.type === 'newline') {\n          editor.insertText('\\n')\n          //The following line updates the cursor\n          Transforms.move(editor, { distance: 0, unit: 'offset' })\n        }\n        return (\n          onHotkey && onHotkey({ event, editor, hotkey, pressedKeys, hotkeys })\n        )\n      }\n    }\n  }\n  return (\n    <Editable\n      renderElement={handleRenderElement}\n      renderLeaf={handleRenderLeaf}\n      onKeyDown={event => handleOnKeyDown(event)}\n      placeholder={placeholder}\n      className={`${classes.editable} ${className}`}\n      {...props}\n    >\n      {children}\n    </Editable>\n  )\n}\n\n// Specifies the default values for props:\nMaterialEditable.defaultProps = {\n  placeholder: 'Type some text...',\n  hotkeys: defaultHotkeys,\n}\n\n// TODO add info about arguments in functions\n\nMaterialEditable.propTypes = {\n  /** To style and override the existing class  */\n  className: PropTypes.string,\n  /** Called when an element needs to be rendered */\n  renderElement: PropTypes.func,\n  /** Called when a leaf needs to be rendered */\n  renderLeaf: PropTypes.func,\n  /** Text to display when there are no contents on the editor. Default\" \"Type some text...\" */\n  placeholder: PropTypes.string,\n  /**\n   * Additional hotkeys to be added other than default. Object of the form `{'mod+k': {type: 'mark', value: 'italic'}\n   * defaultHotkeys can be disallowed by passing hotkeys as null\n   */\n  hotkeys: PropTypes.object,\n  /**\n   * Event tht will be triggered in case a hotkey is detected\n   * It has one single argument that can be deconstructed in `{event, editor, hotkey, pressedKeys, hotkeys}`\n   */\n  onHotKey: PropTypes.func,\n}\n","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;","function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createSvgIcon;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _SvgIcon = _interopRequireDefault(require(\"@material-ui/core/SvgIcon\"));\n\nfunction createSvgIcon(path, displayName) {\n  var Component = _react.default.memo(_react.default.forwardRef(function (props, ref) {\n    return _react.default.createElement(_SvgIcon.default, (0, _extends2.default)({\n      ref: ref\n    }, props), path);\n  }));\n\n  if (process.env.NODE_ENV !== 'production') {\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = _SvgIcon.default.muiName;\n  return Component;\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M18 4H6c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 14H6V6h12v12z\"\n}), 'CropSquareOutlined');\n\nexports.default = _default;","import React from 'react'\nimport { useSlate } from 'slate-react'\nimport PropTypes from 'prop-types'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport CropSquareOutlined from '@material-ui/icons/CropSquareOutlined'\n\n/**\n * ToolbarButton is the base button for any button on the toolbars.\n * It requires the `type` of action to perform and the format that will be added.\n *\n * It displays a tooltip text on hover. If tooltip text is not passed as a prop it will use the capitalized text of the format\n */\nconst ToolbarButton = React.forwardRef(\n  (\n    {\n      tooltip,\n      placement,\n      icon,\n      type,\n      disabled,\n      disableOnSelection,\n      disableOnCollapse,\n      format,\n      onMouseDown,\n      isActive,\n      ...rest\n    },\n    ref\n  ) => {\n    const editor = useSlate()\n\n    /**\n     * If no tooltip prop is passed it generates a default based on the format string.\n     * Converts - into spaces and uppercases the first letter of the first word.\n     */\n    const defaultTooltip = () => {\n      return (format.charAt(0).toUpperCase() + format.substring(1)).replace(\n        '-',\n        ' '\n      )\n    }\n\n    /**\n     * Toggles mark| block and forwards the onMouseDown event\n     */\n    const handleOnMouseDown = event => {\n      event.preventDefault()\n      switch (type) {\n        case 'mark':\n          editor.toggleMark(format)\n          break\n        case 'block':\n          editor.toggleBlock(format)\n      }\n      onMouseDown && onMouseDown({ editor, format, type, event })\n    }\n\n    const checkIsActive = () => {\n      if (isActive) {\n        return isActive()\n      }\n\n      switch (type) {\n        case 'mark':\n          return editor.isMarkActive(format)\n        case 'block':\n          return editor.isBlockActive(format)\n        case 'link':\n          return editor.isNodeTypeActive(format)\n      }\n      return\n    }\n\n    /**\n     * Conditionally disables the button\n     */\n    const isDisabled = () => {\n      let disabled = false\n      disabled = disableOnSelection ? editor.isSelectionExpanded() : false\n      disabled = disableOnCollapse ? editor.isSelectionCollapsed() : disabled\n      return disabled\n    }\n\n    return disabled || isDisabled() ? (\n      <IconButton\n        aria-label={tooltip ? tooltip : defaultTooltip()}\n        ref={ref}\n        color={checkIsActive() ? 'secondary' : 'default'}\n        onMouseDown={event => handleOnMouseDown(event)}\n        disabled={disabled || isDisabled()}\n        {...rest}\n      >\n        {icon}\n      </IconButton>\n    ) : (\n      <Tooltip\n        title={tooltip ? tooltip : defaultTooltip()}\n        placement={placement}\n      >\n        <IconButton\n          aria-label={tooltip ? tooltip : defaultTooltip()}\n          ref={ref}\n          color={checkIsActive() ? 'secondary' : 'default'}\n          onMouseDown={event => handleOnMouseDown(event)}\n          disabled={disabled || isDisabled()}\n          {...rest}\n        >\n          {icon}\n        </IconButton>\n      </Tooltip>\n    )\n  }\n)\n\nexport default ToolbarButton\n\nToolbarButton.defaultProps = {\n  placement: 'top',\n  icon: <CropSquareOutlined />,\n  disableOnCollapse: false,\n  disableOnSelection: false,\n}\n\n// PropTypes\nToolbarButton.propTypes = {\n  /**\n   * Text displayed on the button tooltip. By Default it is the capitalized `format` string.\n   * For instance, `bold` is displayed as `Bold`.\n   */\n  tooltip: PropTypes.string,\n\n  /**\n   * Location where the tooltip will appear.\n   * It can be `top`, `bottom`, `left`, `right`. Defaults to top.\n   */\n  placement: PropTypes.string,\n\n  /**\n   * Toolbar button has the option of adding to the editor value marks and blocks.\n   *\n   * `mark` can be added to the editor value when you want to add something like `bold`, `italic`...\n   *  Marks are rendered into HTML in `renderLeaf` of `MaterialEditable`\n   *\n   * `block` to be added to the editor `value` when the button is pressed. For example: `header1`, `numbered-list`...\n   *  `renderElement` of the `RichEditable` component will need to handle the actual conversion from mark to HTML/Component on render time.\n   *\n   * If you don't want to add a mark or a block do not set the prop or use whatever string.\n   * You can perform the action the button triggers using onMouseDown().\n   */\n  type: PropTypes.string,\n\n  /**\n   *\n   * The string that identifies the format of the block or mark to be added. For example: `bold`, `header1`...\n   */\n  format: PropTypes.string.isRequired,\n\n  /**\n   *\n   * When a button is active it means the button is highlighted. For example, if in current position of the cursor,\n   * the text is bold, the bold button should be active.\n   *\n   * isActive is a function that returns true/false to indicate the status of the mark/block.\n   * Set this function if you need to handle anything other than standard mark or blocks.\n   */\n  isActive: PropTypes.func,\n\n  /**\n   * Unconditionally disables the button\n   *\n   * Disable a button means that the button cannot be clicked (note it is not the opposite of isActive)\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If true, disables the button if there is a text selected on the editor.\n   *\n   * Disable a button means that the button cannot be clicked.\n   *\n   * Use either disableOnSelection or disableOnCollapse, but not both.\n   */\n  disableOnSelection: PropTypes.bool,\n\n  /**\n   * If true, disables the button when  there is no text selected or the editor has no focus.\n   *\n   * Disable a button means that button cannot be clicked.\n   *\n   * Use either disableOnSelection or disableOnCollapse, but not both.\n   */\n  disableOnCollapse: PropTypes.bool,\n\n  /**\n   * Instance a component. The icon that will be displayed. Typically an icon from @material-ui/icons\n   */\n  icon: PropTypes.object,\n\n  /**\n   * On mouse down event is passed up to the parent with props that can be deconstructed in {editor, event, mark/block}\n   */\n  onMouseDown: PropTypes.func,\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M15.6 10.79c.97-.67 1.65-1.77 1.65-2.79 0-2.26-1.75-4-4-4H7v14h7.04c2.09 0 3.71-1.7 3.71-3.79 0-1.52-.86-2.82-2.15-3.42zM10 6.5h3c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-3v-3zm3.5 9H10v-3h3.5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5z\"\n}), 'FormatBold');\n\nexports.default = _default;","import React from 'react'\nimport ToolbarButton from './ToolbarButton'\nimport FormatBold  from '@material-ui/icons/FormatBold'\n\n/**\n * Toolbar button for bold text mark\n * \n * @see ToolbarButton\n */\n\nconst BoldButton = React.forwardRef(\n  (props, ref) => (\n    <ToolbarButton icon={<FormatBold />} type=\"mark\" format=\"bold\" ref={ref} {...props} />\n  )\n)\nexport default BoldButton  ","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M10 4v3h2.21l-3.42 8H6v3h8v-3h-2.21l3.42-8H18V4h-8z\"\n}), 'FormatItalicOutlined');\n\nexports.default = _default;","import React from 'react'\nimport ToolbarButton from './ToolbarButton'\nimport FormatItalicOutlined  from '@material-ui/icons/FormatItalicOutlined'\n\n/**\n * Toolbar button for italic text mark\n * \n * @see ToolbarButton\n */\n\nconst ItalicButton = React.forwardRef(\n  (props, ref) => (\n    <ToolbarButton icon={<FormatItalicOutlined />} type=\"mark\" format=\"italic\" ref={ref} {...props} />\n  )\n)\nexport default ItalicButton  ","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 17c3.31 0 6-2.69 6-6V3h-2.5v8c0 1.93-1.57 3.5-3.5 3.5S8.5 12.93 8.5 11V3H6v8c0 3.31 2.69 6 6 6zm-7 2v2h14v-2H5z\"\n}), 'FormatUnderlined');\n\nexports.default = _default;","import React from 'react'\nimport ToolbarButton from './ToolbarButton'\nimport FormatUnderlined  from '@material-ui/icons/FormatUnderlined'\n\n/**\n * Toolbar button for underlined text mark\n * \n * @see ToolbarButton\n */\nconst UnderlinedButton = React.forwardRef(\n  (props, ref) => (\n    <ToolbarButton icon={<FormatUnderlined />} type=\"mark\" format=\"underlined\" ref={ref} {...props} />\n  )\n)\nexport default UnderlinedButton  ","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M6.85 7.08C6.85 4.37 9.45 3 12.24 3c1.64 0 3 .49 3.9 1.28.77.65 1.46 1.73 1.46 3.24h-3.01c0-.31-.05-.59-.15-.85-.29-.86-1.2-1.28-2.25-1.28-1.86 0-2.34 1.02-2.34 1.7 0 .48.25.88.74 1.21.38.25.77.48 1.41.7H7.39c-.21-.34-.54-.89-.54-1.92zM21 12v-2H3v2h9.62c1.15.45 1.96.75 1.96 1.97 0 1-.81 1.67-2.28 1.67-1.54 0-2.93-.54-2.93-2.51H6.4c0 .55.08 1.13.24 1.58.81 2.29 3.29 3.3 5.67 3.3 2.27 0 5.3-.89 5.3-4.05 0-.3-.01-1.16-.48-1.94H21V12z\"\n}), 'StrikethroughS');\n\nexports.default = _default;","import React from 'react'\nimport ToolbarButton from './ToolbarButton'\nimport StrikethroughSIcon from '@material-ui/icons/StrikethroughS';\n\n/**\n * Toolbar button for strike through text mark\n * \n * @see ToolbarButton\n */\n\nconst StrikethroughButton = React.forwardRef(\n  (props, ref) => (\n    <ToolbarButton icon={<StrikethroughSIcon />} type=\"mark\" format=\"strikethrough\" ref={ref} {...props} />\n  )\n)\nexport default StrikethroughButton  ","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M9.4 16.6L4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0l4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z\"\n}), 'Code');\n\nexports.default = _default;","import React from 'react'\nimport ToolbarButton from './ToolbarButton'\nimport CodeIcon from '@material-ui/icons/Code'\n\n/**\n * Toolbar button for adding code mono-spaced text mark\n * \n * @see ToolbarButton\n */\n\nconst CodeButton = React.forwardRef(\n  (props, ref) => (\n  <ToolbarButton icon={<CodeIcon />} type=\"mark\" format=\"code\" ref={ref} {...props} />\n  )\n)\nexport default CodeButton  ","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M4 10.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm0-6c-.83 0-1.5.67-1.5 1.5S3.17 7.5 4 7.5 5.5 6.83 5.5 6 4.83 4.5 4 4.5zm0 12c-.83 0-1.5.68-1.5 1.5s.68 1.5 1.5 1.5 1.5-.68 1.5-1.5-.67-1.5-1.5-1.5zM7 19h14v-2H7v2zm0-6h14v-2H7v2zm0-8v2h14V5H7z\"\n}), 'FormatListBulleted');\n\nexports.default = _default;","import React from 'react'\nimport ToolbarButton from './ToolbarButton'\nimport FormatListBulleted from '@material-ui/icons/FormatListBulleted'\n\n/**\n * Toolbar button for underlined text mark\n * \n * @see ToolbarButton\n * \n */\nconst BulletedListButton = React.forwardRef(\n  (props, ref) => (\n    <ToolbarButton icon={<FormatListBulleted />} type=\"block\" format=\"bulleted-list\" ref={ref} {...props} />\n  )\n)\nexport default BulletedListButton  ","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\"\n}), 'FormatListNumbered');\n\nexports.default = _default;","import React from 'react'\nimport ToolbarButton from './ToolbarButton'\nimport FormatListNumbered from '@material-ui/icons/FormatListNumbered'\n\n/**\n * Toolbar button for numbered list block\n * \n * @see ToolbarButton\n */\n\nconst NumberedListButton = React.forwardRef(\n  (props, ref) => (\n    <ToolbarButton icon={<FormatListNumbered />} type=\"block\" format=\"numbered-list\" ref={ref} {...props} />\n  )\n)\nexport default NumberedListButton  ","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport {Box} from '@material-ui/core'\nimport BoldButton from '../Buttons/BoldButton'\nimport ItalicButton from '../Buttons/ItalicButton'\nimport UnderlinedButton from '../Buttons/UnderlinedButton'\nimport StrikethroughButton from '../Buttons/StrikethroughButton'\nimport CodeButton from '../Buttons/CodeButton'\nimport BulletedListButton from '../Buttons/BulletedListButton'\nimport NumberedListButton from '../Buttons/NumberedListButton'\n\n\nconst useStyles = makeStyles( theme => ({\n  toolbar: {\n    backgroundColor: theme.palette.grey[200],\n    padding: theme.spacing(1/4)\n  }\n  }))\n\n/**\n * Toolbar that appears on the top of the editor.\n * \n * It accepts any content as children. If no children are set it displays by default the following buttons:\n * Bold, italic, underline, strike through, code, bulleted list and numbered list\n */ \nexport default function Toolbar({children, className, ...props}) {\n  \n  const classes = useStyles()\n    return (\n        <Box className={classes.toolbar}  borderRadius=\"borderRadius\" {...props}>\n            {!children && \n            <React.Fragment> \n              <BoldButton />\n              <ItalicButton />\n              <UnderlinedButton />\n              <StrikethroughButton />\n              <CodeButton />\n              <BulletedListButton />\n              <NumberedListButton />\n            </React.Fragment>\n            }\n            {children && <React.Fragment>{children}</React.Fragment>}\n        </Box>\n    )   \n}","import React from 'react'\nimport { useRef, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { Editor, Range } from 'slate'\nimport { ReactEditor, useSlate } from 'slate-react'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport Box from '@material-ui/core/Box'\n\nimport BoldButton from '../Buttons/BoldButton'\nimport ItalicButton from '../Buttons/ItalicButton'\nimport UnderlinedButton from '../Buttons/UnderlinedButton'\nimport StrikethroughButton from '../Buttons/StrikethroughButton'\nimport CodeButton from '../Buttons/CodeButton'\n\nconst Portal = ({ children }) => {\n  return ReactDOM.createPortal(children, document.body)\n}\n\nconst useStyles = makeStyles(theme => ({\n  hoveringToolbar: {\n    position: 'absolute',\n    padding: theme.spacing(1 / 4),\n    zIndex: 1,\n    top: \"-10000px\",\n    left: \"-10000px\",\n    opacity: 0,\n    backgroundColor: theme.palette.grey[200],\n    transition: \"opacity 0.75s\"\n  }\n}))\n\n/**\n * A hovering toolbar that is, a toolbar that appears over a selected text, and only when there is \n * a selection. \n * \n * If no children are provided it displays the following buttons:\n * Bold, italic, underlined, strike through and code.\n * \n * Children will typically be `ToolbarButton`. \n */\nexport default function HoveringToolbar({ children, className, ...props }) {\n\n  const classes = useStyles()\n  const ref = useRef()\n  const editor = useSlate()\n\n  useEffect(() => {\n    const el = ref.current\n    const { selection } = editor\n\n    if (!el) {\n      return\n    }\n\n    if (\n      !selection ||\n      !ReactEditor.isFocused(editor) ||\n      Range.isCollapsed(selection) ||\n      Editor.string(editor, selection) === ''\n    ) {\n      el.removeAttribute('style')\n      return\n    }\n\n    const domSelection = window.getSelection()\n    const domRange = domSelection.getRangeAt(0)\n    const rect = domRange.getBoundingClientRect()\n    el.style.opacity = 1\n    el.style.top = `${rect.top + window.pageYOffset - el.offsetHeight - 4}px`\n    el.style.left = `${rect.left +\n      window.pageXOffset -\n      el.offsetWidth / 2 +\n      rect.width / 2}px`\n  })\n\n  return (\n    <Portal>\n      <Box\n        borderRadius=\"borderRadius\"\n        ref={ref}\n        className={className ? className : classes.hoveringToolbar}\n        {...props}>\n        {!children && <React.Fragment>\n          <BoldButton />\n          <ItalicButton />\n          <UnderlinedButton />\n          <StrikethroughButton />\n          <CodeButton />\n        </React.Fragment>\n        }\n        {children && children}\n      </Box>\n    </Portal>\n  )\n}\n","import React from 'react'\nimport Box from '@material-ui/core/Box'\nimport PropTypes from 'prop-types'\nimport {useTheme} from '@material-ui/core/styles'\n\n/**\n * Toolbar button separator.\n * \n * Displays an horizontal line. Use it for separating groups of buttons. \n * \n */\n\nexport default function ButtonSeparator({borderColor, ...other}) {\n  const theme = useTheme()\n  return(\n    <Box display=\"inline\"  {...other}>\n        <Box borderLeft={1} borderColor={borderColor ? borderColor : \"grey.400\"} marginLeft=\"2px\" marginRight=\"2px\" display=\"inline\"></Box>\n    </Box>\n  )\n}\n\n","import React, {useState} from 'react'\nimport PropTypes from 'prop-types'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle' \nimport DialogContent from '@material-ui/core/DialogContent' \nimport DialogActions from '@material-ui/core/DialogActions'\n\n/**\n * Simple dialog box with a text field and two buttons Cancel and Save.\n * Three props need to be set: \n *  \n *  1. `onCancel` called when the cancel button is pressed ,\n *  2. `onSave` called when the save button is pressed \n *  3. open, boolean that indicates if the dialog is displayed (true) or not (false)\n *\n */\nexport default function SimpleDialog({ open, title, label, format, defaultValue, onCancel, onSave, ...props }) {\n\n  const [value, setValue] = useState(defaultValue)\n\n  //Calls `onCancel` prop and sets the default value\n  const handleOnCancel = (format) => {\n    onCancel() \n    setValue(defaultValue)\n  }\n  // Calls `onSave` prop and sets the default value\n  const handleOnSave = (event) => {\n    onSave({format, value})\n    setValue(defaultValue)\n  }\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleOnCancel}\n      aria-labelledby=\"dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n      fullWidth={true}\n      maxWidth={props.maxWidth ? props.maxWidth : 'xs' }\n    >\n      <DialogTitle id=\"dialog-title\">{title}</DialogTitle>\n      <DialogContent>\n        <TextField fullWidth multiline autoFocus defaultValue={defaultValue} label={label} variant=\"outlined\"  \n        onChange={(event) => setValue(event.target.value) }required />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => handleOnCancel()} color=\"primary\" variant='outlined'>\n          Cancel\n          </Button>\n        <Button onClick={(event)=> handleOnSave(event)} color=\"primary\" variant='contained'>\n          Save\n          </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nSimpleDialog.propTypes = {\n  /**\n   * If it is true, it displays the dialog window.\n   */\n  open: PropTypes.bool.isRequired, \n  /**\n   * Called whe the Cancel button is pressed \n   */\n  onCancel: PropTypes.func.isRequired,\n  /**\n   * Called when the save button is pressed\n   */\n  onSave: PropTypes.func.isRequired,\n  \n  /**\n   * Title of the dialog window\n   */\n  title: PropTypes.string,\n\n  /**\n   * Label of the textfield\n   */\n  label: PropTypes.string,\n\n  /**\n   * Format of the element to be added/edited. \n   * For example: bold, italic, comment, link, endnote\n   * \n   * Just required if you use the same dialog for different type of nodes.\n   */\n   format: PropTypes.string,\n\n  /**\n   * Default value displayed on the textfield.\n   */\n  defaultValue: PropTypes.string\n};","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M22 4c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h14l4 4V4zm-2 13.17L18.83 16H4V4h16v13.17zM13 5h-2v4H7v2h4v4h2v-4h4V9h-4z\"\n}), 'AddCommentOutlined');\n\nexports.default = _default;","import React from 'react'\nimport ToolbarButton from './ToolbarButton'\nimport AddCommentOutlinedIcon from '@material-ui/icons/AddCommentOutlined'\n\n/**\n * Toolbar button for adding comments.\n * \n * The button is disabled on collapse.\n * \n * @see ToolbarButton\n */\n\nconst AddCommentButton = React.forwardRef(\n  (props, ref) => {\n    return (\n      <ToolbarButton \n        icon={<AddCommentOutlinedIcon />} \n        type=\"other\" \n        disableOnCollapse={true} \n        tooltip=\"Add comment\" \n        format=\"comment\" \n        ref={ref} \n        {...props} />\n    )\n  }\n)\nexport default AddCommentButton  ","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H3V5h18v14zM5 15h14v3H5z\"\n}), 'CallToActionOutlined');\n\nexports.default = _default;","import React from 'react'\nimport ToolbarButton from './ToolbarButton'\nimport CallToActionOutlinedIcon from '@material-ui/icons/CallToActionOutlined'\n\n/**\n * Toolbar button for adding endnotes\n * \n * @see ToolbarButton\n */\n\nconst EndnoteButton = React.forwardRef(\n  (props, ref) => { \n    return (\n      <ToolbarButton \n        icon={<CallToActionOutlinedIcon />} \n        type=\"other\" \n        disableOnSelection={true} \n        tooltip=\"Add endnote\" \n        format=\"endnote\" \n        ref={ref} \n        {...props} />\n    )\n  }\n)\nexport default EndnoteButton  ","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"\n}), 'Link');\n\nexports.default = _default;","import React, { useState } from 'react'\nimport { useSlate } from 'slate-react'\nimport ToolbarButton from './ToolbarButton'\nimport LinkIcon from '@material-ui/icons/Link'\nimport SimpleDialog from '../SimpleDialog'\nimport { Transforms } from 'slate'\n\n/**\n * Toolbar button for adding links\n *\n * @see ToolbarButton\n */\nexport default function LinkButton({ ref, ...props }) {\n  const editor = useSlate()\n  typeof editor.insertLink !== 'function' &&\n    console.error('withLinks() is not initialized')\n  // Handles the dialog that is opened upon clicking the Link Toolbar/HoveringBar button\n  const [openLinkDialog, setOpenLinkDialog] = useState(false)\n\n  // Handles custom buttons click\n  const onLinkButtonDown = ({ editor }) => {\n    // When the dialog box is opened, the focus is lost as well as current selected text.\n    // We need to save it for later on.\n    editor.rememberCurrentSelection()\n    setOpenLinkDialog(true)\n  }\n\n  const handleDialogSave = url => {\n    setOpenLinkDialog(false)\n    // Adds the link to the editor.\n    // The link will wrap the selected text when `rememberCurrentSelection()` was called\n    editor.insertLink(url)\n  }\n\n  return (\n    <React.Fragment>\n      <ToolbarButton\n        icon={<LinkIcon />}\n        type=\"link\"\n        tooltip=\"Add link\"\n        format=\"link\"\n        ref={ref}\n        onMouseDown={event => onLinkButtonDown(event)}\n        {...props}\n      />\n      <SimpleDialog\n        open={openLinkDialog}\n        title=\"Add Link\"\n        label=\"Link\"\n        format=\"link\"\n        onCancel={() => setOpenLinkDialog(false)}\n        onSave={({ value }) => handleDialogSave(value)}\n      />\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: '#e1f5fe',\n    cursor: 'pointer'\n  }\n}))\n\n/**\n * Renders a Comment. \n *  1. Adds blueish background to the text the comment wraps\n *  2. On hover displays the comment.\n * \n *  If `onClick` is passed, it is called if the text wrapped by the comment is clicked.\n * \n *  Expects the `element` object passed as prop to have `element.data.body` to display the comment text.\n * \n */\nconst CommentElement = ({ element, onClick, children, attributes }) => {\n  const classes = useStyles()\n  return (\n    <Tooltip title={`Comment: ${element.data.body}`} >\n      <span className={classes.root} {...attributes} onClick={(event) => onClick && onClick({ event, element })}>{children}</span>\n    </Tooltip>\n  )\n}\n\nexport default CommentElement","import React from 'react'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    cursor: 'pointer',\n  },\n}))\n\n/**\n * Displays a super index text with the index number of the endnote.\n * A tooltip with the content of the endnote is displayed if the user hovers the endnote.\n *\n * Expects the `element` prop to have `element.data.value` the text of the endnote (string) and\n * `element.data.index` the index number fo the endnote.\n *\n * If `onClick` prop is set it is called if user clicks the tex\n */\nconst EndnoteElement = ({ element, onClick, attributes, children }) => {\n  const classes = useStyles()\n  return (\n    <Tooltip placement=\"top\" title={`${element.data.value}`}>\n      <sup\n        className={classes.root}\n        {...attributes}\n        onClick={event => onClick && onClick({ event, element })}\n      >\n        {element.data.index || 'x'}\n        {children}\n      </sup>\n    </Tooltip>\n  )\n}\n\nexport default EndnoteElement\n","import React from 'react'\nimport { useSlate } from 'slate-react'\nimport PropTypes from 'prop-types'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n  text: {\n    marginTop: theme.spacing(0.5),\n    marginLeft: theme.spacing(1),\n  },\n  textError: {\n    color: theme.palette.error.main,\n  },\n}))\n\n/**\n *\n * WordCounter for editor\n * It displays the number words, below the editor\n *  - If maxWords = 200, wordsLength = 90 `Ex: 90/200 words` will display in the counter\n *  - When maxWords is undefined, wordsLength = 90 `Ex: 90 words` will be displayed\n * Word counter will be displayed with error color, when wordLength exceeds maxWords\n */\nexport default function WordCounter({ maxWords }) {\n  const classes = useStyles()\n  const editor = useSlate()\n  const { children } = editor\n  // Words length\n  const wordsLength = editor.getWordsLength(children)\n  // Error based on words length limit\n  const errorExceedWordsLimit = wordsLength > maxWords\n\n  return (\n    <Typography\n      variant=\"subtitle2\"\n      color=\"textSecondary\"\n      className={`${classes.text} ${errorExceedWordsLimit &&\n        classes.textError}`}\n    >\n      {maxWords ? `${wordsLength} / ${maxWords}` : wordsLength} words\n    </Typography>\n  )\n}\n\nWordCounter.propTypes = {\n  /**\n   * To display maximum words in counter\n   *  - If maxWords = 200, wordsLength = 90 `Ex: 90/200 words` will display in the counter\n   *  - When maxWords is undefined, wordsLength = 90 `Ex: 90 words` will be displayed\n   */\n  maxWords: PropTypes.number,\n}\n","import React from 'react'\nimport { useSlate } from 'slate-react'\nimport Typography from '@material-ui/core/Typography'\nimport PropTypes from 'prop-types'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n  text: {\n    marginTop: theme.spacing(0.5),\n    marginLeft: theme.spacing(1),\n  },\n  textError: {\n    color: theme.palette.error.main,\n  },\n}))\n\n/**\n *\n * CharCounter for editor\n * It displays the number characters in the editor\n *  - If maxChars = 200, charLength = 90  `Ex: 90/200 characters` will display in the counter\n *  - When maxChars is undefined, charLength = 90 `Ex: 90 characters` will be displayed\n * Char counter will be displayed with error color, when CharLength exceeds maxChars\n */\nexport default function CharCounter({ maxChars }) {\n  const classes = useStyles()\n  const editor = useSlate()\n  const { children } = editor\n  // Char length\n  const charLength = editor.getCharLength(children)\n  // Error based on chars length limit\n  const errorExceedCharsLimit = charLength > maxChars\n\n  return (\n    <Typography\n      variant=\"subtitle2\"\n      color=\"textSecondary\"\n      className={`${classes.text} ${errorExceedCharsLimit &&\n        classes.textError}`}\n    >\n      {maxChars ? `${charLength} / ${maxChars}` : charLength} characters\n    </Typography>\n  )\n}\n\nCharCounter.propTypes = {\n  /**\n   * To display maximum characters in counter\n   * - If maxChars = 200, charLength = 90  `Ex: 90/200 characters` will display in the counter\n   * - When maxChars is undefined, charLength = 90 `Ex: 90 characters` will be displayed\n   */\n  maxChars: PropTypes.number,\n}\n"],"names":["MaterialEditor","Editor","withBase","editor","isSelectionExpanded","selection","Range","isExpanded","isSelectionCollapsed","isFocused","ReactEditor","unwrapNode","Transforms","unwrapNodes","match","n","type","isNodeTypeActive","nodes","node","rememberedSelection","rememberCurrentSelection","isCollapsed","wrapNode","wrapSelection","insertNodes","wrapNodes","split","collapse","edge","syncExternalNodes","nodesToKeep","unwrap","listOfIds","map","id","unwrapNotInList","removeNotInList","nodesToKeepObj","forEach","editorNodes","findNodesByType","setNodes","data","at","removeNodes","includes","list","listWithNodesAndPath","Array","from","listWithNodes","item","serialize","Node","string","join","syncExternalNodesWithTemporaryId","key","Object","keys","find","temporaryId","nodeToUpdate","getSelectedText","withMarks","isMarkActive","marks","mark","toggleMark","removeMark","addMark","withBlocks","LIST_TYPES","isBlockActive","block","toggleBlock","isActive","isList","selected","children","createMaterialEditor","editorId","withHistory","withReact","createEditor","withComments","isInline","COMMENT_TYPE","element","addComment","syncComments","commentsToKeep","withEndnotes","isVoid","ENDNOTE_TYPE","addEndnote","text","previousEndnoteNode","endnoteId","previous","endnotes","endnote","syncEndnotes","endnotesToKeep","withCounter","getCharLength","length","getWordsLength","content","getParagraphLength","withLinks","LINK_TYPE","insertLink","url","useStyles","makeStyles","root","borderRadius","theme","shape","border","borderColor","palette","grey","primary","focused","main","MaterialSlate","value","onChange","className","focusClassName","classes","useState","setIsFocused","React","propTypes","PropTypes","object","isRequired","arrayOf","func","defaultRenderElement","attributes","rest","defaultRenderLeaf","leaf","bold","code","italic","strikethrough","underlined","defaultHotkeys","editable","paddingLeft","spacing","paddingRight","paddingBottom","fontFamily","typography","MaterialEditable","renderElement","renderLeaf","placeholder","hotkeys","onHotkey","props","useSlate","handleRenderElement","useCallback","handleRenderLeaf","handleOnKeyDown","pressedKeys","isHotkey","event","hotkey","preventDefault","insertText","move","distance","unit","defaultProps","onHotKey","_interopRequireDefault","require$$0","require$$1","require$$2","ToolbarButton","forwardRef","ref","tooltip","placement","icon","disabled","disableOnSelection","disableOnCollapse","format","onMouseDown","defaultTooltip","charAt","toUpperCase","substring","replace","handleOnMouseDown","checkIsActive","isDisabled","CropSquareOutlined","bool","BoldButton","FormatBold","ItalicButton","FormatItalicOutlined","UnderlinedButton","FormatUnderlined","StrikethroughButton","CodeButton","BulletedListButton","FormatListBulleted","NumberedListButton","FormatListNumbered","toolbar","backgroundColor","padding","Toolbar","Portal","ReactDOM","createPortal","document","body","hoveringToolbar","position","zIndex","top","left","opacity","transition","HoveringToolbar","useRef","useEffect","el","current","removeAttribute","domSelection","window","getSelection","domRange","getRangeAt","rect","getBoundingClientRect","style","pageYOffset","offsetHeight","pageXOffset","offsetWidth","width","ButtonSeparator","other","useTheme","SimpleDialog","open","title","label","defaultValue","onCancel","onSave","setValue","handleOnCancel","handleOnSave","maxWidth","target","AddCommentButton","EndnoteButton","LinkButton","console","error","openLinkDialog","setOpenLinkDialog","onLinkButtonDown","handleDialogSave","cursor","CommentElement","onClick","EndnoteElement","index","marginTop","marginLeft","textError","color","WordCounter","maxWords","wordsLength","errorExceedWordsLimit","number","CharCounter","maxChars","charLength","errorExceedCharsLimit"],"mappings":"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"}